
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'SourceFileleftOR_ORleftAMP_AMPleftEQ_EQNOT_EQLTLEGTGEleftPLUSMINUSORCARETleftSTARDIVIDEMODULOLSHIFTRSHIFTAMPAMP AMP_AMP AMP_EQ AND_NOT ASSIGN BOOL_LIT BR BREAK CARET CARET_EQ CASE CHAR_LIT COLON COMMA CONST CONTINUE DATA_TYPE DEFAULT DIVIDE DIVIDE_EQ DOT DOUBLE_QUOTES ELSE EQ EQ_EQ FLOAT_LIT FOR FUNC GE GOTO GT ID IF IMPORT INT_LIT LCURLY LE LROUND LSHIFT LSQUARE LT MAKE MINUS MINUS_EQ MINUS_MINUS MODULO MODULO_EQ NIL NOT NOT_EQ OR OR_EQ OR_OR PACKAGE PLUS PLUS_EQ PLUS_PLUS RCURLY RETURN RROUND RSHIFT RSQUARE SEMICOLON SINGLE_QUOTES STAR STAR_EQ STRING_LIT STRUCT SWITCH TYPE VAR\n        lcurly  : LCURLY\n        \n        rcurly  : RCURLY\n        \n        Type    : TypeName\n                | TypeLit\n        \n        TypeName\t: ID\n                    | DATA_TYPE\n        \n        TypeLit\t: ArrayType \n                | StructType \n                | PointerType \n                | SliceType\n        \n        ArrayType : LSQUARE ArrayLength RSQUARE ElementType\n        \n        ArrayLength : Expression\n        \n        SliceType \t: LSQUARE RSQUARE ElementType\n        \n        ElementType : Type\n        \n        PointerType\t: STAR BaseType\n        \n        BaseType\t: Type\n        \n        StructType \t: STRUCT lcurly FieldDeclList rcurly\n        \n        FieldDeclList \t: FieldDeclList FieldDecl SEMICOLON \n                        | FieldDecl SEMICOLON\n        \n        FieldDecl \t: IdentifierList Type\n        \n        Block\t: lcurly StatementList rcurly\n                | lcurly rcurly\n        \n        StatementList \t: StatementList Statement\n                        | Statement\n        \n        Declaration\t: ConstDecl \n                    | TypeDecl \n                    | VarDecl \n        \n        TopLevelDecl\t: Declaration \n                        | FunctionDecl \n                        | MethodDecl\n        \n        ConstDecl\t:\tCONST ConstSpec SEMICOLON\n        \n        ConstSpec   :\tIdentifierList EQ ExpressionList\n        \n        IdentifierList\t: IdentifierList COMMA ID\n                        | ID\n        \n        ExpressionList\t: ExpressionList COMMA Expression\n                        | Expression\n        \n        TypeDecl\t: TYPE ID Type SEMICOLON\n        \n        VarDecl\t: VAR VarSpec SEMICOLON\n        \n        VarSpec\t: IdentifierList Type \n                | IdentifierList Type EQ ExpressionList\n        \n        ShortVarDecl : IdentifierList ASSIGN ExpressionList\n        \n        FunctionDecl \t: FUNC FunctionName Signature FunctionBody\n                        | FUNC FunctionName Signature SEMICOLON\n        \n        FunctionName\t: ID\n        \n        Signature      \t: Parameters\n                        | Parameters Result\n        \n        Parameters \t: LROUND ParameterList RROUND\n                    | LROUND RROUND\n        \n        ParameterList\t: ParameterList COMMA ParameterDecl \n                        | ParameterDecl\n        \n        ParameterDecl\t: IdentifierList Type\n        \n        Result \t: Type\n        \n        FunctionBody\t: Block\n        \n        MethodDecl\t: FUNC Receiver MethodName Signature\n                    | FUNC Receiver MethodName Signature FunctionBody\n        \n        MethodName  : ID\n        \n        Receiver\t: LROUND ParameterDecl RROUND\n        \n        Operand : Literal \n                | OperandName\n                | LROUND Expression RROUND\n        \n        Literal\t: BasicLit \n                | CompositeLit\n        \n        BasicLit\t: INT_LIT\n                    | FLOAT_LIT\n                    | STRING_LIT\n                    | BOOL_LIT\n                    | CHAR_LIT\n                    | NIL\n        \n        OperandName : ID \n        \n        CompositeLit\t: LiteralType LiteralValue\n        \n        LiteralType\t: ArrayType \n                    | SliceType\n                    | StructType\n        \n        LiteralValue \t: lcurly rcurly\n                        | lcurly ElementList rcurly\n        \n        ElementList\t: Element\n                    | ElementList COMMA Element\n        \n        Element : Expression\n                | LiteralValue\n        \n        PrimaryExpr\t: Operand \n                    | PrimaryExpr Selector \n                    | PrimaryExpr Index \n                    | PrimaryExpr Arguments\n                    | MakeExpr\n        \n        MakeExpr    : MAKE LROUND SliceType COMMA Expression COMMA Expression RROUND\n                    | MAKE LROUND SliceType COMMA Expression RROUND\n\n        \n        Selector\t: DOT ID\n        \n        Index\t: LSQUARE Expression RSQUARE\n        \n        Arguments\t: LROUND ExpressionList RROUND\n                    | LROUND RROUND\n        \n        Expression \t: UnaryExpr \n                    | Expression OR_OR Expression\n                    | Expression AMP_AMP Expression\n                    | Expression EQ_EQ Expression\n                    | Expression NOT_EQ Expression\n                    | Expression LT Expression\n                    | Expression LE Expression\n                    | Expression GT Expression\n                    | Expression GE Expression\n                    | Expression PLUS Expression\n                    | Expression MINUS Expression\n                    | Expression OR Expression\n                    | Expression CARET Expression\n                    | Expression STAR Expression\n                    | Expression DIVIDE Expression\n                    | Expression MODULO Expression\n                    | Expression LSHIFT Expression\n                    | Expression RSHIFT Expression\n                    | Expression AMP Expression\n        \n        UnaryExpr  \t: PrimaryExpr \n                    | unary_op UnaryExpr\n        \n        rel_op\t: EQ_EQ \n                | NOT_EQ \n                | LT \n                | LE \n                | GT \n                | GE\n        \n        add_op\t: PLUS \n                | MINUS\n                | OR \n                | CARET\n        \n        mul_op\t: STAR \n                | DIVIDE\n                | MODULO\n                | LSHIFT\n                | RSHIFT\n                | AMP\n        \n        unary_op \t: PLUS\n                    | MINUS\n                    | NOT\n                    | CARET \n                    | STAR\n                    | AMP\n        \n        Statement \t: Declaration \n                    | LabeledStmt  \n                    | ReturnStmt \n                    | BreakStmt \n                    | ContinueStmt \n                    | GotoStmt\n                    | Block \n                    | IfStmt \n                    | ForStmt\n                    | SimpleStmt SEMICOLON\n                    | SEMICOLON\n        \n        SimpleStmt\t: ExpressionStmt\n                    | IncDecStmt \n                    | Assignment \n                    | ShortVarDecl\n        \n        ExpressionStmt \t: Expression\n                 \n        LabeledStmt\t: Label COLON Statement\n        \n        Label   : ID\n        \n        IncDecStmt \t: Expression PLUS_PLUS\n                    | Expression MINUS_MINUS\n        \n        Assignment\t: ExpressionList assign_op ExpressionList\n        \n        assign_op\t: PLUS_EQ\n                    | MINUS_EQ\n                    | STAR_EQ\n                    | DIVIDE_EQ\n                    | MODULO_EQ\n                    | AMP_EQ\n                    | OR_EQ\n                    | CARET_EQ\n                    | EQ\n        \n        ForStmt : ForLoop Block\n                | WhileLoop Block\n        \n        ForLoop\t: FOR InitStmt SEMICOLON Condition SEMICOLON PostStmt\n                | FOR InitStmt SEMICOLON Condition SEMICOLON\n                | FOR InitStmt SEMICOLON SEMICOLON PostStmt\n                | FOR InitStmt SEMICOLON SEMICOLON\n                | FOR SEMICOLON Condition SEMICOLON PostStmt\n                | FOR SEMICOLON Condition SEMICOLON\n                | FOR SEMICOLON SEMICOLON PostStmt\n                | FOR SEMICOLON SEMICOLON \n        \n        WhileLoop\t: FOR Condition Block\n                    | FOR Block \n        \n        InitStmt\t: SimpleStmt\n        \n        PostStmt\t: SimpleStmt\n        \n        Condition \t: Expression\n        \n        ReturnStmt\t: RETURN SEMICOLON\n                    | RETURN ExpressionList SEMICOLON\n        \n        BreakStmt\t: BREAK SEMICOLON\n                    | BREAK Label SEMICOLON\n        \n        ContinueStmt \t: CONTINUE SEMICOLON\n                        | CONTINUE Label SEMICOLON\n        \n        GotoStmt\t: GOTO Label SEMICOLON\n        \n        IfStmt \t: IF SimpleStmt SEMICOLON Expression Block\n                | IF Expression Block\n                | IF SimpleStmt SEMICOLON Expression ElseStmt\n                | IF Expression ElseStmt\n        \n        ElseStmt\t: ELSE IfStmt\n                    | ELSE Block\n        \n        SourceFile\t: PackageClause ImportDeclList TopLevelDeclList\n                    | PackageClause ImportDeclList\n                    | PackageClause TopLevelDeclList\n                    | PackageClause\n        \n        PackageClause   : PACKAGE ID\n        \n        ImportDeclList\t: ImportDeclList ImportDecl SEMICOLON\n                        | ImportDecl SEMICOLON\n        \n        ImportDecl \t: IMPORT ImportPath\n        \n        ImportPath\t: STRING_LIT\n        \n        TopLevelDeclList\t: TopLevelDeclList TopLevelDecl\n                            | TopLevelDecl\n        '
    
_lr_action_items = {'PACKAGE':([0,],[3,]),'$end':([1,2,4,5,7,9,10,11,12,13,14,19,20,22,23,36,38,44,47,49,50,51,52,53,54,55,59,61,62,63,66,67,69,71,105,110,111,114,116,145,147,179,180,185,253,254,],[0,-195,-193,-194,-202,-28,-29,-30,-25,-26,-27,-196,-192,-201,-198,-197,-45,-31,-5,-3,-4,-6,-7,-8,-9,-10,-38,-42,-43,-53,-46,-52,-48,-54,-37,-15,-16,-22,-2,-47,-55,-13,-14,-21,-11,-17,]),'IMPORT':([2,4,19,23,36,],[8,8,-196,-198,-197,]),'FUNC':([2,4,5,7,9,10,11,12,13,14,19,20,22,23,36,38,44,47,49,50,51,52,53,54,55,59,61,62,63,66,67,69,71,105,110,111,114,116,145,147,179,180,185,253,254,],[15,15,15,-202,-28,-29,-30,-25,-26,-27,-196,15,-201,-198,-197,-45,-31,-5,-3,-4,-6,-7,-8,-9,-10,-38,-42,-43,-53,-46,-52,-48,-54,-37,-15,-16,-22,-2,-47,-55,-13,-14,-21,-11,-17,]),'CONST':([2,4,5,7,9,10,11,12,13,14,19,20,22,23,36,38,44,47,49,50,51,52,53,54,55,59,61,62,63,64,65,66,67,69,71,105,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,145,147,179,180,185,186,187,188,189,201,204,212,213,253,254,258,259,261,262,263,265,266,281,282,290,291,],[16,16,16,-202,-28,-29,-30,-25,-26,-27,-196,16,-201,-198,-197,-45,-31,-5,-3,-4,-6,-7,-8,-9,-10,-38,-42,-43,-53,16,-1,-46,-52,-48,-54,-37,-15,-16,16,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,-47,-55,-13,-14,-21,-23,-143,16,-179,-181,-183,-164,-165,-11,-17,-150,-180,-182,-184,-185,-187,-189,-190,-191,-186,-188,]),'TYPE':([2,4,5,7,9,10,11,12,13,14,19,20,22,23,36,38,44,47,49,50,51,52,53,54,55,59,61,62,63,64,65,66,67,69,71,105,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,145,147,179,180,185,186,187,188,189,201,204,212,213,253,254,258,259,261,262,263,265,266,281,282,290,291,],[17,17,17,-202,-28,-29,-30,-25,-26,-27,-196,17,-201,-198,-197,-45,-31,-5,-3,-4,-6,-7,-8,-9,-10,-38,-42,-43,-53,17,-1,-46,-52,-48,-54,-37,-15,-16,17,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,-47,-55,-13,-14,-21,-23,-143,17,-179,-181,-183,-164,-165,-11,-17,-150,-180,-182,-184,-185,-187,-189,-190,-191,-186,-188,]),'VAR':([2,4,5,7,9,10,11,12,13,14,19,20,22,23,36,38,44,47,49,50,51,52,53,54,55,59,61,62,63,64,65,66,67,69,71,105,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,145,147,179,180,185,186,187,188,189,201,204,212,213,253,254,258,259,261,262,263,265,266,281,282,290,291,],[18,18,18,-202,-28,-29,-30,-25,-26,-27,-196,18,-201,-198,-197,-45,-31,-5,-3,-4,-6,-7,-8,-9,-10,-38,-42,-43,-53,18,-1,-46,-52,-48,-54,-37,-15,-16,18,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,-47,-55,-13,-14,-21,-23,-143,18,-179,-181,-183,-164,-165,-11,-17,-150,-180,-182,-184,-185,-187,-189,-190,-191,-186,-188,]),'ID':([3,12,13,14,15,16,17,18,27,29,32,33,35,38,39,43,44,45,46,56,58,59,64,65,69,72,77,78,79,80,81,83,86,89,104,105,107,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,129,131,132,133,134,143,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,172,177,178,181,183,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,204,212,213,215,220,256,258,259,261,262,263,264,265,266,268,269,276,278,279,281,282,283,287,290,291,293,295,],[19,-25,-26,-27,28,32,33,32,41,32,-34,47,47,47,32,47,-31,94,104,94,47,-38,142,-1,-48,-57,-128,-129,-131,-132,-133,94,-130,94,-33,-37,47,32,94,142,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,94,203,203,203,209,209,-47,32,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,241,94,94,94,47,32,47,-21,-23,-143,142,-179,94,-155,-156,-157,-158,-159,-160,-161,-162,-163,-181,-183,-164,-165,94,94,-19,-150,-180,-182,-184,-185,94,-187,-189,94,209,94,94,-18,-190,-191,209,209,-186,-188,209,94,]),'SEMICOLON':([6,12,13,14,21,24,25,30,34,37,38,44,47,48,49,50,51,52,53,54,55,59,60,64,65,66,67,69,74,75,76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,105,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,131,132,135,138,139,140,141,142,143,145,167,168,169,173,176,179,180,182,184,185,186,187,188,189,190,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,218,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,244,245,248,253,254,255,257,258,259,260,261,262,263,265,266,268,270,271,273,274,275,277,281,282,284,290,291,296,299,],[23,-25,-26,-27,36,-199,-200,44,59,62,-45,-31,-5,105,-3,-4,-6,-7,-8,-9,-10,-38,-39,127,-1,-46,-52,-48,-32,-36,-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,-37,-15,-16,127,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,187,-144,189,201,204,-149,-145,-146,-147,-148,-69,215,-47,-81,-82,-83,-111,-70,-13,-14,256,-40,-21,-23,-143,127,-179,259,-181,261,-151,-183,262,263,264,-149,-69,-152,-153,-164,-165,268,269,-176,-149,-35,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,-90,-60,-74,-11,-17,279,-20,-150,-180,-154,-182,-184,-185,-187,-189,283,287,-178,-41,-88,-89,-75,-190,-191,293,-186,-188,-86,-85,]),'STRING_LIT':([8,12,13,14,44,45,56,59,64,65,77,78,79,80,81,83,86,89,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,129,134,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,177,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,204,212,213,215,220,258,259,261,262,263,264,265,266,268,269,276,278,281,282,283,287,290,291,293,295,],[25,-25,-26,-27,-31,97,97,-38,97,-1,-128,-129,-131,-132,-133,97,-130,97,-37,97,97,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-21,-23,-143,97,-179,97,-155,-156,-157,-158,-159,-160,-161,-162,-163,-181,-183,-164,-165,97,97,-150,-180,-182,-184,-185,97,-187,-189,97,97,97,97,-190,-191,97,97,-186,-188,97,97,]),'RCURLY':([12,13,14,44,59,64,65,76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,105,113,114,115,116,117,118,119,120,121,122,123,124,125,127,167,168,169,173,176,177,181,185,186,187,189,201,204,212,213,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,244,245,248,249,250,251,252,256,258,259,261,262,263,265,266,274,275,277,279,281,282,289,290,291,296,299,],[-25,-26,-27,-31,-38,116,-1,-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,-37,116,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,-81,-82,-83,-111,-70,116,116,-21,-23,-143,-179,-181,-183,-164,-165,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,-90,-60,-74,116,-76,-78,-79,-19,-150,-180,-182,-184,-185,-187,-189,-88,-89,-75,-18,-190,-191,-77,-186,-188,-86,-85,]),'RETURN':([12,13,14,44,59,64,65,105,113,114,115,116,117,118,119,120,121,122,123,124,125,127,185,186,187,188,189,201,204,212,213,258,259,261,262,263,265,266,281,282,290,291,],[-25,-26,-27,-31,-38,129,-1,-37,129,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,-21,-23,-143,129,-179,-181,-183,-164,-165,-150,-180,-182,-184,-185,-187,-189,-190,-191,-186,-188,]),'BREAK':([12,13,14,44,59,64,65,105,113,114,115,116,117,118,119,120,121,122,123,124,125,127,185,186,187,188,189,201,204,212,213,258,259,261,262,263,265,266,281,282,290,291,],[-25,-26,-27,-31,-38,131,-1,-37,131,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,-21,-23,-143,131,-179,-181,-183,-164,-165,-150,-180,-182,-184,-185,-187,-189,-190,-191,-186,-188,]),'CONTINUE':([12,13,14,44,59,64,65,105,113,114,115,116,117,118,119,120,121,122,123,124,125,127,185,186,187,188,189,201,204,212,213,258,259,261,262,263,265,266,281,282,290,291,],[-25,-26,-27,-31,-38,132,-1,-37,132,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,-21,-23,-143,132,-179,-181,-183,-164,-165,-150,-180,-182,-184,-185,-187,-189,-190,-191,-186,-188,]),'GOTO':([12,13,14,44,59,64,65,105,113,114,115,116,117,118,119,120,121,122,123,124,125,127,185,186,187,188,189,201,204,212,213,258,259,261,262,263,265,266,281,282,290,291,],[-25,-26,-27,-31,-38,133,-1,-37,133,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,-21,-23,-143,133,-179,-181,-183,-164,-165,-150,-180,-182,-184,-185,-187,-189,-190,-191,-186,-188,]),'IF':([12,13,14,44,59,64,65,105,113,114,115,116,117,118,119,120,121,122,123,124,125,127,185,186,187,188,189,201,204,212,213,258,259,261,262,263,265,266,267,281,282,290,291,],[-25,-26,-27,-31,-38,134,-1,-37,134,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,-21,-23,-143,134,-179,-181,-183,-164,-165,-150,-180,-182,-184,-185,-187,-189,134,-190,-191,-186,-188,]),'LCURLY':([12,13,14,37,38,44,47,49,50,51,52,53,54,55,57,59,64,65,66,67,69,71,75,76,82,84,85,87,88,91,92,93,94,95,96,97,98,99,100,101,102,103,105,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,135,136,137,138,139,140,141,143,145,167,168,169,173,176,177,179,180,185,186,187,188,189,201,204,208,209,210,211,212,213,216,217,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,244,245,248,253,254,258,259,260,261,262,263,265,266,267,269,272,273,274,275,277,278,280,281,282,283,285,286,287,290,291,292,293,294,296,297,299,],[-25,-26,-27,65,-45,-31,-5,-3,-4,-6,-7,-8,-9,-10,65,-38,65,-1,-46,-52,-48,65,-36,-91,-110,-80,-84,-58,-59,-72,-61,-62,-69,-63,-64,-65,-66,-67,-68,65,-71,-73,-37,-15,-16,65,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,-149,65,65,-145,-146,-147,-148,65,-47,-81,-82,-83,-111,-70,65,-13,-14,-21,-23,-143,65,-179,-181,-183,65,-69,-152,-153,-164,-165,65,-175,-178,-35,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,-90,-60,-74,-11,-17,-150,-180,-154,-182,-184,-185,-187,-189,65,-173,-174,-41,-88,-89,-75,65,65,-190,-191,-169,-172,-177,-171,-186,-188,-168,-167,-170,-86,-166,-85,]),'FOR':([12,13,14,44,59,64,65,105,113,114,115,116,117,118,119,120,121,122,123,124,125,127,185,186,187,188,189,201,204,212,213,258,259,261,262,263,265,266,281,282,290,291,],[-25,-26,-27,-31,-38,143,-1,-37,143,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,-21,-23,-143,143,-179,-181,-183,-164,-165,-150,-180,-182,-184,-185,-187,-189,-190,-191,-186,-188,]),'PLUS':([12,13,14,44,45,56,59,64,65,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,95,96,97,98,99,100,105,108,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,129,134,135,142,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,176,177,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,204,208,209,212,213,215,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,248,251,258,259,261,262,263,264,265,266,268,269,271,274,275,276,277,278,280,281,282,283,287,288,290,291,293,295,296,298,299,],[-25,-26,-27,-31,77,77,-38,77,-1,157,-91,-128,-129,-131,-132,-133,-110,77,-80,-84,-130,-58,-59,77,-61,-62,-69,-63,-64,-65,-66,-67,-68,-37,157,77,77,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,77,77,157,-69,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-81,-82,-83,77,77,-111,157,-70,77,-21,-23,-143,77,-179,77,-155,-156,-157,-158,-159,-160,-161,-162,-163,-181,-183,157,-69,-164,-165,77,157,77,157,157,157,157,157,157,157,157,157,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,157,-90,-60,-74,157,-150,-180,-182,-184,-185,77,-187,-189,77,77,157,-88,-89,77,-75,77,157,-190,-191,77,77,157,-186,-188,77,77,-86,157,-85,]),'MINUS':([12,13,14,44,45,56,59,64,65,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,95,96,97,98,99,100,105,108,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,129,134,135,142,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,176,177,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,204,208,209,212,213,215,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,248,251,258,259,261,262,263,264,265,266,268,269,271,274,275,276,277,278,280,281,282,283,287,288,290,291,293,295,296,298,299,],[-25,-26,-27,-31,78,78,-38,78,-1,158,-91,-128,-129,-131,-132,-133,-110,78,-80,-84,-130,-58,-59,78,-61,-62,-69,-63,-64,-65,-66,-67,-68,-37,158,78,78,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,78,78,158,-69,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-81,-82,-83,78,78,-111,158,-70,78,-21,-23,-143,78,-179,78,-155,-156,-157,-158,-159,-160,-161,-162,-163,-181,-183,158,-69,-164,-165,78,158,78,158,158,158,158,158,158,158,158,158,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,158,-90,-60,-74,158,-150,-180,-182,-184,-185,78,-187,-189,78,78,158,-88,-89,78,-75,78,158,-190,-191,78,78,158,-186,-188,78,78,-86,158,-85,]),'NOT':([12,13,14,44,45,56,59,64,65,77,78,79,80,81,83,86,89,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,129,134,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,177,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,204,212,213,215,220,258,259,261,262,263,264,265,266,268,269,276,278,281,282,283,287,290,291,293,295,],[-25,-26,-27,-31,86,86,-38,86,-1,-128,-129,-131,-132,-133,86,-130,86,-37,86,86,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-21,-23,-143,86,-179,86,-155,-156,-157,-158,-159,-160,-161,-162,-163,-181,-183,-164,-165,86,86,-150,-180,-182,-184,-185,86,-187,-189,86,86,86,86,-190,-191,86,86,-186,-188,86,86,]),'CARET':([12,13,14,44,45,56,59,64,65,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,95,96,97,98,99,100,105,108,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,129,134,135,142,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,176,177,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,204,208,209,212,213,215,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,248,251,258,259,261,262,263,264,265,266,268,269,271,274,275,276,277,278,280,281,282,283,287,288,290,291,293,295,296,298,299,],[-25,-26,-27,-31,79,79,-38,79,-1,160,-91,-128,-129,-131,-132,-133,-110,79,-80,-84,-130,-58,-59,79,-61,-62,-69,-63,-64,-65,-66,-67,-68,-37,160,79,79,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,79,79,160,-69,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-81,-82,-83,79,79,-111,160,-70,79,-21,-23,-143,79,-179,79,-155,-156,-157,-158,-159,-160,-161,-162,-163,-181,-183,160,-69,-164,-165,79,160,79,160,160,160,160,160,160,160,160,160,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,160,-90,-60,-74,160,-150,-180,-182,-184,-185,79,-187,-189,79,79,160,-88,-89,79,-75,79,160,-190,-191,79,79,160,-186,-188,79,79,-86,160,-85,]),'STAR':([12,13,14,32,33,35,38,43,44,45,56,58,59,64,65,69,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,95,96,97,98,99,100,104,105,107,108,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,129,134,135,142,143,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,176,177,178,183,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,204,208,209,212,213,215,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,248,251,258,259,261,262,263,264,265,266,268,269,271,274,275,276,277,278,280,281,282,283,287,288,290,291,293,295,296,298,299,],[-25,-26,-27,-34,58,58,58,58,-31,80,80,58,-38,80,-1,-48,161,-91,-128,-129,-131,-132,-133,-110,80,-80,-84,-130,-58,-59,80,-61,-62,-69,-63,-64,-65,-66,-67,-68,-33,-37,58,161,80,80,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,80,80,161,-69,80,-47,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-81,-82,-83,80,80,-111,161,-70,80,58,58,-21,-23,-143,80,-179,80,-155,-156,-157,-158,-159,-160,-161,-162,-163,-181,-183,161,-69,-164,-165,80,161,80,161,161,161,161,161,161,161,161,161,161,161,161,161,-104,-105,-106,-107,-108,-109,-87,161,-90,-60,-74,161,-150,-180,-182,-184,-185,80,-187,-189,80,80,161,-88,-89,80,-75,80,161,-190,-191,80,80,161,-186,-188,80,80,-86,161,-85,]),'AMP':([12,13,14,44,45,56,59,64,65,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,95,96,97,98,99,100,105,108,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,129,134,135,142,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,176,177,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,204,208,209,212,213,215,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,248,251,258,259,261,262,263,264,265,266,268,269,271,274,275,276,277,278,280,281,282,283,287,288,290,291,293,295,296,298,299,],[-25,-26,-27,-31,81,81,-38,81,-1,166,-91,-128,-129,-131,-132,-133,-110,81,-80,-84,-130,-58,-59,81,-61,-62,-69,-63,-64,-65,-66,-67,-68,-37,166,81,81,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,81,81,166,-69,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-81,-82,-83,81,81,-111,166,-70,81,-21,-23,-143,81,-179,81,-155,-156,-157,-158,-159,-160,-161,-162,-163,-181,-183,166,-69,-164,-165,81,166,81,166,166,166,166,166,166,166,166,166,166,166,166,166,-104,-105,-106,-107,-108,-109,-87,166,-90,-60,-74,166,-150,-180,-182,-184,-185,81,-187,-189,81,81,166,-88,-89,81,-75,81,166,-190,-191,81,81,166,-186,-188,81,81,-86,166,-85,]),'LROUND':([12,13,14,15,26,28,40,41,44,45,56,59,64,65,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,129,134,142,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,176,177,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,204,209,212,213,215,220,241,244,245,248,258,259,261,262,263,264,265,266,268,269,274,275,276,277,278,281,282,283,287,290,291,293,295,296,299,],[-25,-26,-27,29,39,-44,39,-56,-31,89,89,-38,89,-1,-128,-129,-131,-132,-133,172,89,-80,-84,-130,-58,-59,89,175,-61,-62,-69,-63,-64,-65,-66,-67,-68,-37,89,89,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,89,89,-69,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-81,-82,-83,89,89,-70,89,-21,-23,-143,89,-179,89,-155,-156,-157,-158,-159,-160,-161,-162,-163,-181,-183,-69,-164,-165,89,89,-87,-90,-60,-74,-150,-180,-182,-184,-185,89,-187,-189,89,89,-88,-89,89,-75,89,-190,-191,89,89,-186,-188,89,89,-86,-85,]),'MAKE':([12,13,14,44,45,56,59,64,65,77,78,79,80,81,83,86,89,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,129,134,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,177,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,204,212,213,215,220,258,259,261,262,263,264,265,266,268,269,276,278,281,282,283,287,290,291,293,295,],[-25,-26,-27,-31,90,90,-38,90,-1,-128,-129,-131,-132,-133,90,-130,90,-37,90,90,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-21,-23,-143,90,-179,90,-155,-156,-157,-158,-159,-160,-161,-162,-163,-181,-183,-164,-165,90,90,-150,-180,-182,-184,-185,90,-187,-189,90,90,90,90,-190,-191,90,90,-186,-188,90,90,]),'INT_LIT':([12,13,14,44,45,56,59,64,65,77,78,79,80,81,83,86,89,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,129,134,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,177,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,204,212,213,215,220,258,259,261,262,263,264,265,266,268,269,276,278,281,282,283,287,290,291,293,295,],[-25,-26,-27,-31,95,95,-38,95,-1,-128,-129,-131,-132,-133,95,-130,95,-37,95,95,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-21,-23,-143,95,-179,95,-155,-156,-157,-158,-159,-160,-161,-162,-163,-181,-183,-164,-165,95,95,-150,-180,-182,-184,-185,95,-187,-189,95,95,95,95,-190,-191,95,95,-186,-188,95,95,]),'FLOAT_LIT':([12,13,14,44,45,56,59,64,65,77,78,79,80,81,83,86,89,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,129,134,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,177,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,204,212,213,215,220,258,259,261,262,263,264,265,266,268,269,276,278,281,282,283,287,290,291,293,295,],[-25,-26,-27,-31,96,96,-38,96,-1,-128,-129,-131,-132,-133,96,-130,96,-37,96,96,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-21,-23,-143,96,-179,96,-155,-156,-157,-158,-159,-160,-161,-162,-163,-181,-183,-164,-165,96,96,-150,-180,-182,-184,-185,96,-187,-189,96,96,96,96,-190,-191,96,96,-186,-188,96,96,]),'BOOL_LIT':([12,13,14,44,45,56,59,64,65,77,78,79,80,81,83,86,89,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,129,134,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,177,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,204,212,213,215,220,258,259,261,262,263,264,265,266,268,269,276,278,281,282,283,287,290,291,293,295,],[-25,-26,-27,-31,98,98,-38,98,-1,-128,-129,-131,-132,-133,98,-130,98,-37,98,98,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-21,-23,-143,98,-179,98,-155,-156,-157,-158,-159,-160,-161,-162,-163,-181,-183,-164,-165,98,98,-150,-180,-182,-184,-185,98,-187,-189,98,98,98,98,-190,-191,98,98,-186,-188,98,98,]),'CHAR_LIT':([12,13,14,44,45,56,59,64,65,77,78,79,80,81,83,86,89,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,129,134,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,177,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,204,212,213,215,220,258,259,261,262,263,264,265,266,268,269,276,278,281,282,283,287,290,291,293,295,],[-25,-26,-27,-31,99,99,-38,99,-1,-128,-129,-131,-132,-133,99,-130,99,-37,99,99,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-21,-23,-143,99,-179,99,-155,-156,-157,-158,-159,-160,-161,-162,-163,-181,-183,-164,-165,99,99,-150,-180,-182,-184,-185,99,-187,-189,99,99,99,99,-190,-191,99,99,-186,-188,99,99,]),'NIL':([12,13,14,44,45,56,59,64,65,77,78,79,80,81,83,86,89,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,129,134,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,177,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,204,212,213,215,220,258,259,261,262,263,264,265,266,268,269,276,278,281,282,283,287,290,291,293,295,],[-25,-26,-27,-31,100,100,-38,100,-1,-128,-129,-131,-132,-133,100,-130,100,-37,100,100,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-21,-23,-143,100,-179,100,-155,-156,-157,-158,-159,-160,-161,-162,-163,-181,-183,-164,-165,100,100,-150,-180,-182,-184,-185,100,-187,-189,100,100,100,100,-190,-191,100,100,-186,-188,100,100,]),'LSQUARE':([12,13,14,32,33,35,38,43,44,45,56,58,59,64,65,69,77,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,95,96,97,98,99,100,104,105,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,129,134,142,143,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,175,176,177,178,183,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,204,209,212,213,215,220,241,244,245,248,258,259,261,262,263,264,265,266,268,269,274,275,276,277,278,281,282,283,287,290,291,293,295,296,299,],[-25,-26,-27,-34,56,56,56,56,-31,56,56,56,-38,56,-1,-48,-128,-129,-131,-132,-133,171,56,-80,-84,-130,-58,-59,56,-61,-62,-69,-63,-64,-65,-66,-67,-68,-33,-37,56,56,56,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,56,56,-69,56,-47,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-81,-82,-83,56,56,247,-70,56,56,56,-21,-23,-143,56,-179,56,-155,-156,-157,-158,-159,-160,-161,-162,-163,-181,-183,-69,-164,-165,56,56,-87,-90,-60,-74,-150,-180,-182,-184,-185,56,-187,-189,56,56,-88,-89,56,-75,56,-190,-191,56,56,-186,-188,56,56,-86,-85,]),'STRUCT':([12,13,14,32,33,35,38,43,44,45,56,58,59,64,65,69,77,78,79,80,81,83,86,89,104,105,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,129,134,143,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,177,178,183,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,204,212,213,215,220,258,259,261,262,263,264,265,266,268,269,276,278,281,282,283,287,290,291,293,295,],[-25,-26,-27,-34,57,57,57,57,-31,57,57,57,-38,57,-1,-48,-128,-129,-131,-132,-133,57,-130,57,-33,-37,57,57,57,-22,-24,-2,-134,-135,-136,-137,-138,-139,-140,-141,-142,-144,57,57,57,-47,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-21,-23,-143,57,-179,57,-155,-156,-157,-158,-159,-160,-161,-162,-163,-181,-183,-164,-165,57,57,-150,-180,-182,-184,-185,57,-187,-189,57,57,57,57,-190,-191,57,57,-186,-188,57,57,]),'EQ':([31,32,47,49,50,51,52,53,54,55,60,76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,104,110,111,116,130,135,142,167,168,169,173,176,179,180,208,209,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,244,245,248,253,254,274,275,277,296,299,],[45,-34,-5,-3,-4,-6,-7,-8,-9,-10,112,-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,-33,-15,-16,-2,200,-36,-69,-81,-82,-83,-111,-70,-13,-14,-36,-69,-36,-35,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,-90,-60,-74,-11,-17,-88,-89,-75,-86,-85,]),'COMMA':([31,32,35,43,47,49,50,51,52,53,54,55,68,70,73,74,75,76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,104,110,111,116,130,135,142,144,167,168,169,173,176,179,180,183,184,190,208,209,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,248,249,250,251,252,253,254,260,273,274,275,277,288,289,296,299,],[46,-34,46,46,-5,-3,-4,-6,-7,-8,-9,-10,146,-50,-51,148,-36,-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,-33,-15,-16,-2,148,-36,-34,46,-81,-82,-83,-111,-70,-13,-14,46,148,148,-36,-34,-36,-49,-35,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,148,-90,-60,276,-74,278,-76,-78,-79,-11,-17,148,148,-88,-89,-75,295,-77,-86,-85,]),'DATA_TYPE':([32,33,35,38,43,58,69,104,107,145,178,183,],[-34,51,51,51,51,51,-48,-33,51,-47,51,51,]),'RROUND':([39,42,47,49,50,51,52,53,54,55,68,70,73,75,76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,110,111,116,167,168,169,172,173,174,176,179,180,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,248,253,254,274,275,277,288,296,298,299,],[69,72,-5,-3,-4,-6,-7,-8,-9,-10,145,-50,-51,-36,-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,-15,-16,-2,-81,-82,-83,244,-111,245,-70,-13,-14,-49,-35,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,275,-90,-60,-74,-11,-17,-88,-89,-75,296,-86,299,-85,]),'RSQUARE':([56,76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,106,108,116,167,168,169,173,176,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,247,248,274,275,277,296,299,],[107,-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,178,-12,-2,-81,-82,-83,-111,-70,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,274,-90,-60,107,-74,-88,-89,-75,-86,-85,]),'OR_OR':([75,76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,108,116,135,142,167,168,169,173,174,176,208,209,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,248,251,271,274,275,277,280,288,296,298,299,],[149,-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,149,-2,149,-69,-81,-82,-83,-111,149,-70,149,-69,149,149,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,149,-90,-60,-74,149,149,-88,-89,-75,149,149,-86,149,-85,]),'AMP_AMP':([75,76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,108,116,135,142,167,168,169,173,174,176,208,209,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,248,251,271,274,275,277,280,288,296,298,299,],[150,-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,150,-2,150,-69,-81,-82,-83,-111,150,-70,150,-69,150,150,150,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,150,-90,-60,-74,150,150,-88,-89,-75,150,150,-86,150,-85,]),'EQ_EQ':([75,76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,108,116,135,142,167,168,169,173,174,176,208,209,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,248,251,271,274,275,277,280,288,296,298,299,],[151,-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,151,-2,151,-69,-81,-82,-83,-111,151,-70,151,-69,151,151,151,151,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,151,-90,-60,-74,151,151,-88,-89,-75,151,151,-86,151,-85,]),'NOT_EQ':([75,76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,108,116,135,142,167,168,169,173,174,176,208,209,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,248,251,271,274,275,277,280,288,296,298,299,],[152,-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,152,-2,152,-69,-81,-82,-83,-111,152,-70,152,-69,152,152,152,152,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,152,-90,-60,-74,152,152,-88,-89,-75,152,152,-86,152,-85,]),'LT':([75,76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,108,116,135,142,167,168,169,173,174,176,208,209,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,248,251,271,274,275,277,280,288,296,298,299,],[153,-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,153,-2,153,-69,-81,-82,-83,-111,153,-70,153,-69,153,153,153,153,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,153,-90,-60,-74,153,153,-88,-89,-75,153,153,-86,153,-85,]),'LE':([75,76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,108,116,135,142,167,168,169,173,174,176,208,209,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,248,251,271,274,275,277,280,288,296,298,299,],[154,-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,154,-2,154,-69,-81,-82,-83,-111,154,-70,154,-69,154,154,154,154,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,154,-90,-60,-74,154,154,-88,-89,-75,154,154,-86,154,-85,]),'GT':([75,76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,108,116,135,142,167,168,169,173,174,176,208,209,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,248,251,271,274,275,277,280,288,296,298,299,],[155,-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,155,-2,155,-69,-81,-82,-83,-111,155,-70,155,-69,155,155,155,155,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,155,-90,-60,-74,155,155,-88,-89,-75,155,155,-86,155,-85,]),'GE':([75,76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,108,116,135,142,167,168,169,173,174,176,208,209,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,248,251,271,274,275,277,280,288,296,298,299,],[156,-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,156,-2,156,-69,-81,-82,-83,-111,156,-70,156,-69,156,156,156,156,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,156,-90,-60,-74,156,156,-88,-89,-75,156,156,-86,156,-85,]),'OR':([75,76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,108,116,135,142,167,168,169,173,174,176,208,209,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,248,251,271,274,275,277,280,288,296,298,299,],[159,-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,159,-2,159,-69,-81,-82,-83,-111,159,-70,159,-69,159,159,159,159,159,159,159,159,159,159,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,159,-90,-60,-74,159,159,-88,-89,-75,159,159,-86,159,-85,]),'DIVIDE':([75,76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,108,116,135,142,167,168,169,173,174,176,208,209,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,248,251,271,274,275,277,280,288,296,298,299,],[162,-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,162,-2,162,-69,-81,-82,-83,-111,162,-70,162,-69,162,162,162,162,162,162,162,162,162,162,162,162,162,162,-104,-105,-106,-107,-108,-109,-87,162,-90,-60,-74,162,162,-88,-89,-75,162,162,-86,162,-85,]),'MODULO':([75,76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,108,116,135,142,167,168,169,173,174,176,208,209,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,248,251,271,274,275,277,280,288,296,298,299,],[163,-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,163,-2,163,-69,-81,-82,-83,-111,163,-70,163,-69,163,163,163,163,163,163,163,163,163,163,163,163,163,163,-104,-105,-106,-107,-108,-109,-87,163,-90,-60,-74,163,163,-88,-89,-75,163,163,-86,163,-85,]),'LSHIFT':([75,76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,108,116,135,142,167,168,169,173,174,176,208,209,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,248,251,271,274,275,277,280,288,296,298,299,],[164,-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,164,-2,164,-69,-81,-82,-83,-111,164,-70,164,-69,164,164,164,164,164,164,164,164,164,164,164,164,164,164,-104,-105,-106,-107,-108,-109,-87,164,-90,-60,-74,164,164,-88,-89,-75,164,164,-86,164,-85,]),'RSHIFT':([75,76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,108,116,135,142,167,168,169,173,174,176,208,209,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,248,251,271,274,275,277,280,288,296,298,299,],[165,-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,165,-2,165,-69,-81,-82,-83,-111,165,-70,165,-69,165,165,165,165,165,165,165,165,165,165,165,165,165,165,-104,-105,-106,-107,-108,-109,-87,165,-90,-60,-74,165,165,-88,-89,-75,165,165,-86,165,-85,]),'PLUS_PLUS':([76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,116,135,142,167,168,169,173,176,208,209,219,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,244,245,248,274,275,277,296,299,],[-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,-2,210,-69,-81,-82,-83,-111,-70,210,-69,210,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,-90,-60,-74,-88,-89,-75,-86,-85,]),'MINUS_MINUS':([76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,116,135,142,167,168,169,173,176,208,209,219,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,244,245,248,274,275,277,296,299,],[-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,-2,211,-69,-81,-82,-83,-111,-70,211,-69,211,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,-90,-60,-74,-88,-89,-75,-86,-85,]),'PLUS_EQ':([76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,116,130,135,142,167,168,169,173,176,208,209,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,244,245,248,274,275,277,296,299,],[-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,-2,192,-36,-69,-81,-82,-83,-111,-70,-36,-69,-36,-35,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,-90,-60,-74,-88,-89,-75,-86,-85,]),'MINUS_EQ':([76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,116,130,135,142,167,168,169,173,176,208,209,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,244,245,248,274,275,277,296,299,],[-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,-2,193,-36,-69,-81,-82,-83,-111,-70,-36,-69,-36,-35,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,-90,-60,-74,-88,-89,-75,-86,-85,]),'STAR_EQ':([76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,116,130,135,142,167,168,169,173,176,208,209,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,244,245,248,274,275,277,296,299,],[-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,-2,194,-36,-69,-81,-82,-83,-111,-70,-36,-69,-36,-35,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,-90,-60,-74,-88,-89,-75,-86,-85,]),'DIVIDE_EQ':([76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,116,130,135,142,167,168,169,173,176,208,209,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,244,245,248,274,275,277,296,299,],[-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,-2,195,-36,-69,-81,-82,-83,-111,-70,-36,-69,-36,-35,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,-90,-60,-74,-88,-89,-75,-86,-85,]),'MODULO_EQ':([76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,116,130,135,142,167,168,169,173,176,208,209,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,244,245,248,274,275,277,296,299,],[-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,-2,196,-36,-69,-81,-82,-83,-111,-70,-36,-69,-36,-35,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,-90,-60,-74,-88,-89,-75,-86,-85,]),'AMP_EQ':([76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,116,130,135,142,167,168,169,173,176,208,209,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,244,245,248,274,275,277,296,299,],[-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,-2,197,-36,-69,-81,-82,-83,-111,-70,-36,-69,-36,-35,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,-90,-60,-74,-88,-89,-75,-86,-85,]),'OR_EQ':([76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,116,130,135,142,167,168,169,173,176,208,209,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,244,245,248,274,275,277,296,299,],[-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,-2,198,-36,-69,-81,-82,-83,-111,-70,-36,-69,-36,-35,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,-90,-60,-74,-88,-89,-75,-86,-85,]),'CARET_EQ':([76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,116,130,135,142,167,168,169,173,176,208,209,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,244,245,248,274,275,277,296,299,],[-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,-2,199,-36,-69,-81,-82,-83,-111,-70,-36,-69,-36,-35,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,-90,-60,-74,-88,-89,-75,-86,-85,]),'ELSE':([76,82,84,85,87,88,92,93,94,95,96,97,98,99,100,116,167,168,169,173,176,208,209,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,244,245,248,274,275,277,280,296,299,],[-91,-110,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,-2,-81,-82,-83,-111,-70,267,-69,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-87,-90,-60,-74,-88,-89,-75,267,-86,-85,]),'DOT':([82,84,85,87,88,92,93,94,95,96,97,98,99,100,116,142,167,168,169,176,209,241,244,245,248,274,275,277,296,299,],[170,-80,-84,-58,-59,-61,-62,-69,-63,-64,-65,-66,-67,-68,-2,-69,-81,-82,-83,-70,-69,-87,-90,-60,-74,-88,-89,-75,-86,-85,]),'ASSIGN':([104,142,144,209,],[-33,-34,220,-34,]),'COLON':([128,142,],[188,-151,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'SourceFile':([0,],[1,]),'PackageClause':([0,],[2,]),'ImportDeclList':([2,],[4,]),'TopLevelDeclList':([2,4,],[5,20,]),'ImportDecl':([2,4,],[6,21,]),'TopLevelDecl':([2,4,5,20,],[7,7,22,22,]),'Declaration':([2,4,5,20,64,113,188,],[9,9,9,9,117,117,117,]),'FunctionDecl':([2,4,5,20,],[10,10,10,10,]),'MethodDecl':([2,4,5,20,],[11,11,11,11,]),'ConstDecl':([2,4,5,20,64,113,188,],[12,12,12,12,12,12,12,]),'TypeDecl':([2,4,5,20,64,113,188,],[13,13,13,13,13,13,13,]),'VarDecl':([2,4,5,20,64,113,188,],[14,14,14,14,14,14,14,]),'ImportPath':([8,],[24,]),'FunctionName':([15,],[26,]),'Receiver':([15,],[27,]),'ConstSpec':([16,],[30,]),'IdentifierList':([16,18,29,39,64,109,113,134,143,146,181,188,269,283,287,293,],[31,35,43,43,144,183,144,144,144,43,183,144,144,144,144,144,]),'VarSpec':([18,],[34,]),'Signature':([26,40,],[37,71,]),'Parameters':([26,40,],[38,38,]),'MethodName':([27,],[40,]),'ParameterDecl':([29,39,146,],[42,70,221,]),'Type':([33,35,38,43,58,107,178,183,],[48,60,67,73,111,180,180,257,]),'TypeName':([33,35,38,43,58,107,178,183,],[49,49,49,49,49,49,49,49,]),'TypeLit':([33,35,38,43,58,107,178,183,],[50,50,50,50,50,50,50,50,]),'ArrayType':([33,35,38,43,45,56,58,64,83,89,107,112,113,129,134,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,177,178,183,188,191,215,220,264,268,269,276,278,283,287,293,295,],[52,52,52,52,102,102,52,102,102,102,52,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,52,52,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'StructType':([33,35,38,43,45,56,58,64,83,89,107,112,113,129,134,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,177,178,183,188,191,215,220,264,268,269,276,278,283,287,293,295,],[53,53,53,53,103,103,53,103,103,103,53,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,53,53,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'PointerType':([33,35,38,43,58,107,178,183,],[54,54,54,54,54,54,54,54,]),'SliceType':([33,35,38,43,45,56,58,64,83,89,107,112,113,129,134,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,175,177,178,183,188,191,215,220,264,268,269,276,278,283,287,293,295,],[55,55,55,55,91,91,55,91,91,91,55,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,246,91,55,55,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'FunctionBody':([37,71,],[61,147,]),'Block':([37,64,71,113,136,137,143,188,208,216,267,280,],[63,123,63,123,212,213,217,123,265,272,282,290,]),'lcurly':([37,57,64,71,101,113,136,137,143,177,188,208,216,267,278,280,],[64,109,64,64,177,64,64,64,64,177,64,64,64,64,177,64,]),'Result':([38,],[66,]),'ParameterList':([39,],[68,]),'ExpressionList':([45,64,112,113,129,134,143,172,188,191,220,269,283,287,293,],[74,130,184,130,190,130,130,243,130,260,273,130,130,130,130,]),'Expression':([45,56,64,89,112,113,129,134,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,177,188,191,215,220,264,268,269,276,278,283,287,293,295,],[75,108,135,174,75,135,75,208,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,242,75,251,135,75,271,75,280,271,135,288,251,135,135,135,298,]),'UnaryExpr':([45,56,64,83,89,112,113,129,134,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,177,188,191,215,220,264,268,269,276,278,283,287,293,295,],[76,76,76,173,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'PrimaryExpr':([45,56,64,83,89,112,113,129,134,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,177,188,191,215,220,264,268,269,276,278,283,287,293,295,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'unary_op':([45,56,64,83,89,112,113,129,134,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,177,188,191,215,220,264,268,269,276,278,283,287,293,295,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'Operand':([45,56,64,83,89,112,113,129,134,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,177,188,191,215,220,264,268,269,276,278,283,287,293,295,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'MakeExpr':([45,56,64,83,89,112,113,129,134,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,177,188,191,215,220,264,268,269,276,278,283,287,293,295,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'Literal':([45,56,64,83,89,112,113,129,134,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,177,188,191,215,220,264,268,269,276,278,283,287,293,295,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'OperandName':([45,56,64,83,89,112,113,129,134,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,177,188,191,215,220,264,268,269,276,278,283,287,293,295,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'BasicLit':([45,56,64,83,89,112,113,129,134,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,177,188,191,215,220,264,268,269,276,278,283,287,293,295,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'CompositeLit':([45,56,64,83,89,112,113,129,134,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,177,188,191,215,220,264,268,269,276,278,283,287,293,295,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'LiteralType':([45,56,64,83,89,112,113,129,134,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,177,188,191,215,220,264,268,269,276,278,283,287,293,295,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'ArrayLength':([56,],[106,]),'BaseType':([58,],[110,]),'StatementList':([64,],[113,]),'rcurly':([64,113,177,181,249,],[114,185,248,254,277,]),'Statement':([64,113,188,],[115,186,258,]),'LabeledStmt':([64,113,188,],[118,118,118,]),'ReturnStmt':([64,113,188,],[119,119,119,]),'BreakStmt':([64,113,188,],[120,120,120,]),'ContinueStmt':([64,113,188,],[121,121,121,]),'GotoStmt':([64,113,188,],[122,122,122,]),'IfStmt':([64,113,188,267,],[124,124,124,281,]),'ForStmt':([64,113,188,],[125,125,125,]),'SimpleStmt':([64,113,134,143,188,269,283,287,293,],[126,126,207,218,126,286,286,286,286,]),'Label':([64,113,131,132,133,188,],[128,128,202,205,206,128,]),'ForLoop':([64,113,188,],[136,136,136,]),'WhileLoop':([64,113,188,],[137,137,137,]),'ExpressionStmt':([64,113,134,143,188,269,283,287,293,],[138,138,138,138,138,138,138,138,138,]),'IncDecStmt':([64,113,134,143,188,269,283,287,293,],[139,139,139,139,139,139,139,139,139,]),'Assignment':([64,113,134,143,188,269,283,287,293,],[140,140,140,140,140,140,140,140,140,]),'ShortVarDecl':([64,113,134,143,188,269,283,287,293,],[141,141,141,141,141,141,141,141,141,]),'Selector':([82,],[167,]),'Index':([82,],[168,]),'Arguments':([82,],[169,]),'LiteralValue':([101,177,278,],[176,252,252,]),'ElementType':([107,178,],[179,253,]),'FieldDeclList':([109,],[181,]),'FieldDecl':([109,181,],[182,255,]),'assign_op':([130,],[191,]),'InitStmt':([143,],[214,]),'Condition':([143,215,268,],[216,270,284,]),'ElementList':([177,],[249,]),'Element':([177,278,],[250,289,]),'ElseStmt':([208,280,],[266,291,]),'PostStmt':([269,283,287,293,],[285,292,294,297,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> SourceFile","S'",1,None,None,None),
  ('lcurly -> LCURLY','lcurly',1,'p_lcurly','parser1.py',35),
  ('rcurly -> RCURLY','rcurly',1,'p_rcurly','parser1.py',40),
  ('Type -> TypeName','Type',1,'p_Type','parser1.py',45),
  ('Type -> TypeLit','Type',1,'p_Type','parser1.py',46),
  ('TypeName -> ID','TypeName',1,'p_TypeName','parser1.py',51),
  ('TypeName -> DATA_TYPE','TypeName',1,'p_TypeName','parser1.py',52),
  ('TypeLit -> ArrayType','TypeLit',1,'p_TypeLit','parser1.py',57),
  ('TypeLit -> StructType','TypeLit',1,'p_TypeLit','parser1.py',58),
  ('TypeLit -> PointerType','TypeLit',1,'p_TypeLit','parser1.py',59),
  ('TypeLit -> SliceType','TypeLit',1,'p_TypeLit','parser1.py',60),
  ('ArrayType -> LSQUARE ArrayLength RSQUARE ElementType','ArrayType',4,'p_ArrayType','parser1.py',64),
  ('ArrayLength -> Expression','ArrayLength',1,'p_ArrayLength','parser1.py',69),
  ('SliceType -> LSQUARE RSQUARE ElementType','SliceType',3,'p_SliceType','parser1.py',74),
  ('ElementType -> Type','ElementType',1,'p_ElementType','parser1.py',79),
  ('PointerType -> STAR BaseType','PointerType',2,'p_PointerType','parser1.py',84),
  ('BaseType -> Type','BaseType',1,'p_BaseType','parser1.py',89),
  ('StructType -> STRUCT lcurly FieldDeclList rcurly','StructType',4,'p_StructType','parser1.py',94),
  ('FieldDeclList -> FieldDeclList FieldDecl SEMICOLON','FieldDeclList',3,'p_FieldDeclList','parser1.py',99),
  ('FieldDeclList -> FieldDecl SEMICOLON','FieldDeclList',2,'p_FieldDeclList','parser1.py',100),
  ('FieldDecl -> IdentifierList Type','FieldDecl',2,'p_FieldDecl','parser1.py',105),
  ('Block -> lcurly StatementList rcurly','Block',3,'p_Block','parser1.py',110),
  ('Block -> lcurly rcurly','Block',2,'p_Block','parser1.py',111),
  ('StatementList -> StatementList Statement','StatementList',2,'p_StatementList','parser1.py',116),
  ('StatementList -> Statement','StatementList',1,'p_StatementList','parser1.py',117),
  ('Declaration -> ConstDecl','Declaration',1,'p_Declaration','parser1.py',122),
  ('Declaration -> TypeDecl','Declaration',1,'p_Declaration','parser1.py',123),
  ('Declaration -> VarDecl','Declaration',1,'p_Declaration','parser1.py',124),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_TopLevelDecl','parser1.py',129),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_TopLevelDecl','parser1.py',130),
  ('TopLevelDecl -> MethodDecl','TopLevelDecl',1,'p_TopLevelDecl','parser1.py',131),
  ('ConstDecl -> CONST ConstSpec SEMICOLON','ConstDecl',3,'p_ConstDecl','parser1.py',136),
  ('ConstSpec -> IdentifierList EQ ExpressionList','ConstSpec',3,'p_ConstSpec','parser1.py',141),
  ('IdentifierList -> IdentifierList COMMA ID','IdentifierList',3,'p_IdentifierList','parser1.py',146),
  ('IdentifierList -> ID','IdentifierList',1,'p_IdentifierList','parser1.py',147),
  ('ExpressionList -> ExpressionList COMMA Expression','ExpressionList',3,'p_ExpressionList','parser1.py',152),
  ('ExpressionList -> Expression','ExpressionList',1,'p_ExpressionList','parser1.py',153),
  ('TypeDecl -> TYPE ID Type SEMICOLON','TypeDecl',4,'p_TypeDecl','parser1.py',158),
  ('VarDecl -> VAR VarSpec SEMICOLON','VarDecl',3,'p_VarDecl','parser1.py',163),
  ('VarSpec -> IdentifierList Type','VarSpec',2,'p_VarSpec','parser1.py',168),
  ('VarSpec -> IdentifierList Type EQ ExpressionList','VarSpec',4,'p_VarSpec','parser1.py',169),
  ('ShortVarDecl -> IdentifierList ASSIGN ExpressionList','ShortVarDecl',3,'p_ShortVarDecl','parser1.py',174),
  ('FunctionDecl -> FUNC FunctionName Signature FunctionBody','FunctionDecl',4,'p_FunctionDecl','parser1.py',179),
  ('FunctionDecl -> FUNC FunctionName Signature SEMICOLON','FunctionDecl',4,'p_FunctionDecl','parser1.py',180),
  ('FunctionName -> ID','FunctionName',1,'p_FunctionName','parser1.py',185),
  ('Signature -> Parameters','Signature',1,'p_Signature','parser1.py',190),
  ('Signature -> Parameters Result','Signature',2,'p_Signature','parser1.py',191),
  ('Parameters -> LROUND ParameterList RROUND','Parameters',3,'p_Parameters','parser1.py',196),
  ('Parameters -> LROUND RROUND','Parameters',2,'p_Parameters','parser1.py',197),
  ('ParameterList -> ParameterList COMMA ParameterDecl','ParameterList',3,'p_ParameterList','parser1.py',202),
  ('ParameterList -> ParameterDecl','ParameterList',1,'p_ParameterList','parser1.py',203),
  ('ParameterDecl -> IdentifierList Type','ParameterDecl',2,'p_ParameterDecl','parser1.py',208),
  ('Result -> Type','Result',1,'p_Result','parser1.py',213),
  ('FunctionBody -> Block','FunctionBody',1,'p_FunctionBody','parser1.py',218),
  ('MethodDecl -> FUNC Receiver MethodName Signature','MethodDecl',4,'p_MethodDecl','parser1.py',223),
  ('MethodDecl -> FUNC Receiver MethodName Signature FunctionBody','MethodDecl',5,'p_MethodDecl','parser1.py',224),
  ('MethodName -> ID','MethodName',1,'p_MethodName','parser1.py',229),
  ('Receiver -> LROUND ParameterDecl RROUND','Receiver',3,'p_Receiver','parser1.py',234),
  ('Operand -> Literal','Operand',1,'p_Operand','parser1.py',239),
  ('Operand -> OperandName','Operand',1,'p_Operand','parser1.py',240),
  ('Operand -> LROUND Expression RROUND','Operand',3,'p_Operand','parser1.py',241),
  ('Literal -> BasicLit','Literal',1,'p_Literal','parser1.py',246),
  ('Literal -> CompositeLit','Literal',1,'p_Literal','parser1.py',247),
  ('BasicLit -> INT_LIT','BasicLit',1,'p_BasicLit','parser1.py',252),
  ('BasicLit -> FLOAT_LIT','BasicLit',1,'p_BasicLit','parser1.py',253),
  ('BasicLit -> STRING_LIT','BasicLit',1,'p_BasicLit','parser1.py',254),
  ('BasicLit -> BOOL_LIT','BasicLit',1,'p_BasicLit','parser1.py',255),
  ('BasicLit -> CHAR_LIT','BasicLit',1,'p_BasicLit','parser1.py',256),
  ('BasicLit -> NIL','BasicLit',1,'p_BasicLit','parser1.py',257),
  ('OperandName -> ID','OperandName',1,'p_OperandName','parser1.py',262),
  ('CompositeLit -> LiteralType LiteralValue','CompositeLit',2,'p_CompositeLit','parser1.py',267),
  ('LiteralType -> ArrayType','LiteralType',1,'p_LiteralType','parser1.py',272),
  ('LiteralType -> SliceType','LiteralType',1,'p_LiteralType','parser1.py',273),
  ('LiteralType -> StructType','LiteralType',1,'p_LiteralType','parser1.py',274),
  ('LiteralValue -> lcurly rcurly','LiteralValue',2,'p_LiteralValue','parser1.py',282),
  ('LiteralValue -> lcurly ElementList rcurly','LiteralValue',3,'p_LiteralValue','parser1.py',283),
  ('ElementList -> Element','ElementList',1,'p_ElementList','parser1.py',288),
  ('ElementList -> ElementList COMMA Element','ElementList',3,'p_ElementList','parser1.py',289),
  ('Element -> Expression','Element',1,'p_Element','parser1.py',294),
  ('Element -> LiteralValue','Element',1,'p_Element','parser1.py',295),
  ('PrimaryExpr -> Operand','PrimaryExpr',1,'p_PrimaryExpr','parser1.py',300),
  ('PrimaryExpr -> PrimaryExpr Selector','PrimaryExpr',2,'p_PrimaryExpr','parser1.py',301),
  ('PrimaryExpr -> PrimaryExpr Index','PrimaryExpr',2,'p_PrimaryExpr','parser1.py',302),
  ('PrimaryExpr -> PrimaryExpr Arguments','PrimaryExpr',2,'p_PrimaryExpr','parser1.py',303),
  ('PrimaryExpr -> MakeExpr','PrimaryExpr',1,'p_PrimaryExpr','parser1.py',304),
  ('MakeExpr -> MAKE LROUND SliceType COMMA Expression COMMA Expression RROUND','MakeExpr',8,'p_MakeExpr','parser1.py',309),
  ('MakeExpr -> MAKE LROUND SliceType COMMA Expression RROUND','MakeExpr',6,'p_MakeExpr','parser1.py',310),
  ('Selector -> DOT ID','Selector',2,'p_Selector','parser1.py',317),
  ('Index -> LSQUARE Expression RSQUARE','Index',3,'p_Index','parser1.py',327),
  ('Arguments -> LROUND ExpressionList RROUND','Arguments',3,'p_Arguments','parser1.py',332),
  ('Arguments -> LROUND RROUND','Arguments',2,'p_Arguments','parser1.py',333),
  ('Expression -> UnaryExpr','Expression',1,'p_Expression','parser1.py',338),
  ('Expression -> Expression OR_OR Expression','Expression',3,'p_Expression','parser1.py',339),
  ('Expression -> Expression AMP_AMP Expression','Expression',3,'p_Expression','parser1.py',340),
  ('Expression -> Expression EQ_EQ Expression','Expression',3,'p_Expression','parser1.py',341),
  ('Expression -> Expression NOT_EQ Expression','Expression',3,'p_Expression','parser1.py',342),
  ('Expression -> Expression LT Expression','Expression',3,'p_Expression','parser1.py',343),
  ('Expression -> Expression LE Expression','Expression',3,'p_Expression','parser1.py',344),
  ('Expression -> Expression GT Expression','Expression',3,'p_Expression','parser1.py',345),
  ('Expression -> Expression GE Expression','Expression',3,'p_Expression','parser1.py',346),
  ('Expression -> Expression PLUS Expression','Expression',3,'p_Expression','parser1.py',347),
  ('Expression -> Expression MINUS Expression','Expression',3,'p_Expression','parser1.py',348),
  ('Expression -> Expression OR Expression','Expression',3,'p_Expression','parser1.py',349),
  ('Expression -> Expression CARET Expression','Expression',3,'p_Expression','parser1.py',350),
  ('Expression -> Expression STAR Expression','Expression',3,'p_Expression','parser1.py',351),
  ('Expression -> Expression DIVIDE Expression','Expression',3,'p_Expression','parser1.py',352),
  ('Expression -> Expression MODULO Expression','Expression',3,'p_Expression','parser1.py',353),
  ('Expression -> Expression LSHIFT Expression','Expression',3,'p_Expression','parser1.py',354),
  ('Expression -> Expression RSHIFT Expression','Expression',3,'p_Expression','parser1.py',355),
  ('Expression -> Expression AMP Expression','Expression',3,'p_Expression','parser1.py',356),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_UnaryExpr','parser1.py',361),
  ('UnaryExpr -> unary_op UnaryExpr','UnaryExpr',2,'p_UnaryExpr','parser1.py',362),
  ('rel_op -> EQ_EQ','rel_op',1,'p_rel_op','parser1.py',375),
  ('rel_op -> NOT_EQ','rel_op',1,'p_rel_op','parser1.py',376),
  ('rel_op -> LT','rel_op',1,'p_rel_op','parser1.py',377),
  ('rel_op -> LE','rel_op',1,'p_rel_op','parser1.py',378),
  ('rel_op -> GT','rel_op',1,'p_rel_op','parser1.py',379),
  ('rel_op -> GE','rel_op',1,'p_rel_op','parser1.py',380),
  ('add_op -> PLUS','add_op',1,'p_add_op','parser1.py',385),
  ('add_op -> MINUS','add_op',1,'p_add_op','parser1.py',386),
  ('add_op -> OR','add_op',1,'p_add_op','parser1.py',387),
  ('add_op -> CARET','add_op',1,'p_add_op','parser1.py',388),
  ('mul_op -> STAR','mul_op',1,'p_mul_op','parser1.py',393),
  ('mul_op -> DIVIDE','mul_op',1,'p_mul_op','parser1.py',394),
  ('mul_op -> MODULO','mul_op',1,'p_mul_op','parser1.py',395),
  ('mul_op -> LSHIFT','mul_op',1,'p_mul_op','parser1.py',396),
  ('mul_op -> RSHIFT','mul_op',1,'p_mul_op','parser1.py',397),
  ('mul_op -> AMP','mul_op',1,'p_mul_op','parser1.py',398),
  ('unary_op -> PLUS','unary_op',1,'p_unary_op','parser1.py',403),
  ('unary_op -> MINUS','unary_op',1,'p_unary_op','parser1.py',404),
  ('unary_op -> NOT','unary_op',1,'p_unary_op','parser1.py',405),
  ('unary_op -> CARET','unary_op',1,'p_unary_op','parser1.py',406),
  ('unary_op -> STAR','unary_op',1,'p_unary_op','parser1.py',407),
  ('unary_op -> AMP','unary_op',1,'p_unary_op','parser1.py',408),
  ('Statement -> Declaration','Statement',1,'p_Statement','parser1.py',413),
  ('Statement -> LabeledStmt','Statement',1,'p_Statement','parser1.py',414),
  ('Statement -> ReturnStmt','Statement',1,'p_Statement','parser1.py',415),
  ('Statement -> BreakStmt','Statement',1,'p_Statement','parser1.py',416),
  ('Statement -> ContinueStmt','Statement',1,'p_Statement','parser1.py',417),
  ('Statement -> GotoStmt','Statement',1,'p_Statement','parser1.py',418),
  ('Statement -> Block','Statement',1,'p_Statement','parser1.py',419),
  ('Statement -> IfStmt','Statement',1,'p_Statement','parser1.py',420),
  ('Statement -> ForStmt','Statement',1,'p_Statement','parser1.py',421),
  ('Statement -> SimpleStmt SEMICOLON','Statement',2,'p_Statement','parser1.py',422),
  ('Statement -> SEMICOLON','Statement',1,'p_Statement','parser1.py',423),
  ('SimpleStmt -> ExpressionStmt','SimpleStmt',1,'p_SimpleStmt','parser1.py',428),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_SimpleStmt','parser1.py',429),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_SimpleStmt','parser1.py',430),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_SimpleStmt','parser1.py',431),
  ('ExpressionStmt -> Expression','ExpressionStmt',1,'p_ExpressionStmt','parser1.py',436),
  ('LabeledStmt -> Label COLON Statement','LabeledStmt',3,'p_LabeledStmt','parser1.py',441),
  ('Label -> ID','Label',1,'p_Label','parser1.py',446),
  ('IncDecStmt -> Expression PLUS_PLUS','IncDecStmt',2,'p_IncDecStmt','parser1.py',451),
  ('IncDecStmt -> Expression MINUS_MINUS','IncDecStmt',2,'p_IncDecStmt','parser1.py',452),
  ('Assignment -> ExpressionList assign_op ExpressionList','Assignment',3,'p_Assignment','parser1.py',457),
  ('assign_op -> PLUS_EQ','assign_op',1,'p_assign_op','parser1.py',462),
  ('assign_op -> MINUS_EQ','assign_op',1,'p_assign_op','parser1.py',463),
  ('assign_op -> STAR_EQ','assign_op',1,'p_assign_op','parser1.py',464),
  ('assign_op -> DIVIDE_EQ','assign_op',1,'p_assign_op','parser1.py',465),
  ('assign_op -> MODULO_EQ','assign_op',1,'p_assign_op','parser1.py',466),
  ('assign_op -> AMP_EQ','assign_op',1,'p_assign_op','parser1.py',467),
  ('assign_op -> OR_EQ','assign_op',1,'p_assign_op','parser1.py',468),
  ('assign_op -> CARET_EQ','assign_op',1,'p_assign_op','parser1.py',469),
  ('assign_op -> EQ','assign_op',1,'p_assign_op','parser1.py',470),
  ('ForStmt -> ForLoop Block','ForStmt',2,'p_ForStmt','parser1.py',475),
  ('ForStmt -> WhileLoop Block','ForStmt',2,'p_ForStmt','parser1.py',476),
  ('ForLoop -> FOR InitStmt SEMICOLON Condition SEMICOLON PostStmt','ForLoop',6,'p_ForLoop','parser1.py',481),
  ('ForLoop -> FOR InitStmt SEMICOLON Condition SEMICOLON','ForLoop',5,'p_ForLoop','parser1.py',482),
  ('ForLoop -> FOR InitStmt SEMICOLON SEMICOLON PostStmt','ForLoop',5,'p_ForLoop','parser1.py',483),
  ('ForLoop -> FOR InitStmt SEMICOLON SEMICOLON','ForLoop',4,'p_ForLoop','parser1.py',484),
  ('ForLoop -> FOR SEMICOLON Condition SEMICOLON PostStmt','ForLoop',5,'p_ForLoop','parser1.py',485),
  ('ForLoop -> FOR SEMICOLON Condition SEMICOLON','ForLoop',4,'p_ForLoop','parser1.py',486),
  ('ForLoop -> FOR SEMICOLON SEMICOLON PostStmt','ForLoop',4,'p_ForLoop','parser1.py',487),
  ('ForLoop -> FOR SEMICOLON SEMICOLON','ForLoop',3,'p_ForLoop','parser1.py',488),
  ('WhileLoop -> FOR Condition Block','WhileLoop',3,'p_WhileLoop','parser1.py',493),
  ('WhileLoop -> FOR Block','WhileLoop',2,'p_WhileLoop','parser1.py',494),
  ('InitStmt -> SimpleStmt','InitStmt',1,'p_InitStmt','parser1.py',499),
  ('PostStmt -> SimpleStmt','PostStmt',1,'p_PostStmt','parser1.py',504),
  ('Condition -> Expression','Condition',1,'p_Condition','parser1.py',509),
  ('ReturnStmt -> RETURN SEMICOLON','ReturnStmt',2,'p_ReturnStmt','parser1.py',514),
  ('ReturnStmt -> RETURN ExpressionList SEMICOLON','ReturnStmt',3,'p_ReturnStmt','parser1.py',515),
  ('BreakStmt -> BREAK SEMICOLON','BreakStmt',2,'p_BreakStmt','parser1.py',520),
  ('BreakStmt -> BREAK Label SEMICOLON','BreakStmt',3,'p_BreakStmt','parser1.py',521),
  ('ContinueStmt -> CONTINUE SEMICOLON','ContinueStmt',2,'p_ContinueStmt','parser1.py',526),
  ('ContinueStmt -> CONTINUE Label SEMICOLON','ContinueStmt',3,'p_ContinueStmt','parser1.py',527),
  ('GotoStmt -> GOTO Label SEMICOLON','GotoStmt',3,'p_GotoStmt','parser1.py',532),
  ('IfStmt -> IF SimpleStmt SEMICOLON Expression Block','IfStmt',5,'p_IfStmt','parser1.py',537),
  ('IfStmt -> IF Expression Block','IfStmt',3,'p_IfStmt','parser1.py',538),
  ('IfStmt -> IF SimpleStmt SEMICOLON Expression ElseStmt','IfStmt',5,'p_IfStmt','parser1.py',539),
  ('IfStmt -> IF Expression ElseStmt','IfStmt',3,'p_IfStmt','parser1.py',540),
  ('ElseStmt -> ELSE IfStmt','ElseStmt',2,'p_ElseStmt','parser1.py',544),
  ('ElseStmt -> ELSE Block','ElseStmt',2,'p_ElseStmt','parser1.py',545),
  ('SourceFile -> PackageClause ImportDeclList TopLevelDeclList','SourceFile',3,'p_SourceFile','parser1.py',550),
  ('SourceFile -> PackageClause ImportDeclList','SourceFile',2,'p_SourceFile','parser1.py',551),
  ('SourceFile -> PackageClause TopLevelDeclList','SourceFile',2,'p_SourceFile','parser1.py',552),
  ('SourceFile -> PackageClause','SourceFile',1,'p_SourceFile','parser1.py',553),
  ('PackageClause -> PACKAGE ID','PackageClause',2,'p_PackageClause','parser1.py',558),
  ('ImportDeclList -> ImportDeclList ImportDecl SEMICOLON','ImportDeclList',3,'p_ImportDeclList','parser1.py',563),
  ('ImportDeclList -> ImportDecl SEMICOLON','ImportDeclList',2,'p_ImportDeclList','parser1.py',564),
  ('ImportDecl -> IMPORT ImportPath','ImportDecl',2,'p_ImportDecl','parser1.py',569),
  ('ImportPath -> STRING_LIT','ImportPath',1,'p_ImportPath','parser1.py',574),
  ('TopLevelDeclList -> TopLevelDeclList TopLevelDecl','TopLevelDeclList',2,'p_TopLevelDeclList','parser1.py',579),
  ('TopLevelDeclList -> TopLevelDecl','TopLevelDeclList',1,'p_TopLevelDeclList','parser1.py',580),
]
